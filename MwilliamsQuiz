
/**
 * Quiz class where the questions and frame work is done
 *
 * @author (your name)
 * @version (a version number or a date)
 */


import javax.swing.*;
import java.awt.*;
import java.awt.event.*;  

public class Quiz 
{
      JRadioButton rb[] = new JRadioButton[4];
      
      JLabel imageLabel,R;
      JLabel Q,Q2;
      
      String ans[] = new String[10];
      int current=0,count=0;
      
     ButtonGroup bg= new ButtonGroup();
      MenuItem I1,I2,I3;
   
      
      
   public void QuizDetails()
  {
    
    MenuBar menuB;
      Menu menu;
          
       JFrame frame = new JFrame("Quiz Competition");
     
    frame.setVisible(true);
    frame.getContentPane().setBackground(Color.WHITE);
    //frame.setLayout(new FlowLayout(FlowLayout.CENTER));
    frame.setBounds(300,200,680,800);
    frame.setLayout(null);
     frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);  
     
     
     imageLabel = new JLabel();
    JPanel pic = new JPanel();
    pic.setBounds(150,15,300,300);
     pic.setBackground(Color.GREEN);
    frame.add(pic);
    pic.add(imageLabel);
     
    //for ( int w=0; w<10;w++)
     //{
      // P[w] = new JLabel();
      // frame.add(P[w]);
    //}
    
     JPanel question = new JPanel();
    question.setBounds(0,319,680,40);
    question.setBackground(Color.RED);
    frame.add(question);
    
     Q= new JLabel();
     Q.setForeground(Color.BLUE);
     Q.setFont(Q.getFont().deriveFont(Font.BOLD + Font.ITALIC,17.0f));
     question.add(Q);
    
    
    
     JPanel instruction = new JPanel();
    instruction.setBounds(135,364,400,40);
    instruction.setBackground(Color.YELLOW);
    frame.add(instruction);
    
     Q2= new JLabel();
     Q2.setFont(Q.getFont().deriveFont(Font.BOLD + Font.ITALIC,16.0f));
     instruction.add(Q2);
    
    bg= new ButtonGroup();
     
     
     for ( int i=0; i<4;i++)
     {
       rb[i] = new JRadioButton();
       rb[i].setBackground(Color.WHITE);
       rb[i].setFont(rb[i].getFont().deriveFont(Font.BOLD +Font.ITALIC,16.0f));
       frame.add(rb[i]);
       bg.add(rb[i]);
       
       
      }
     rb[0].setBounds(220,440,240,80);
     rb[1].setBounds(220,460,250,80);
     rb[2].setBounds(220,480,260,80);
     rb[3].setBounds(220,500,270,80);
     set();
     
     
     JPanel end = new JPanel(new FlowLayout());
    end.setBounds(0,525,680,40);
    end.setBackground(Color.ORANGE);
    frame.add(end);
    
     R=new JLabel("Result");
     frame.add(R);
     R.setFont(Q.getFont().deriveFont(Font.BOLD +Font.ITALIC,16.0f));
     end.add(R);
     
     JTextField t = new JTextField(40);
     
     frame.add(t);
     t.setFont(t.getFont().deriveFont(14.0f));
     end.add(t);
     
      JPanel endButtons = new JPanel(new FlowLayout());
    endButtons.setBounds(0,570,680,40);
    endButtons.setBackground(Color.PINK);
    frame.add(endButtons);

    JButton button2 = new JButton("Check");
    endButtons.add(button2);
    button2.setEnabled(false);
    
    JButton button = new JButton("Next");
    endButtons.add(button);
    
    
    JButton button3 = new JButton (" Previous");
    endButtons.add(button3);
    
    
     button.addActionListener( new ActionListener()
     {
         public void actionPerformed(ActionEvent d) 
         {
             if (d.getSource() == button)
             {
                 if (check())
                 
                 count = count +1;
                 current++;
                  
                
               
                if(current == 1){
                 if ( rb[0].isSelected())
               {
                  ans[0] =rb[0].getText();
                }
               else if ( rb[1].isSelected())
               {
                 ans[0] =rb[1].getText();
               }
               else if ( rb[2].isSelected())
               {
                ans[0] =rb[2].getText();
               }
               else if ( rb[3].isSelected())
               {
                ans[0] =rb[3].getText();
               }
            }
            
                 if(current == 2){
                 if ( rb[0].isSelected())
               {
                   ans[1] =rb[0].getText();
                }
               else if ( rb[1].isSelected())
               {
                  ans[1] =rb[1].getText();
               }
               else if ( rb[2].isSelected())
               {
                 ans[1]=rb[2].getText();
               }
               else if ( rb[3].isSelected())
               {
                 ans[1]=rb[3].getText();
               }
            }
            
             if(current == 3){
                 if ( rb[0].isSelected())
               {
                  ans[2] =rb[0].getText();
                }
               else if ( rb[1].isSelected())
               {
                 ans[2] =rb[1].getText();
               }
               else if ( rb[2].isSelected())
               {
                ans[2] =rb[2].getText();
               }
               else if ( rb[3].isSelected())
               {
                ans[2] =rb[3].getText();
               }
            }
            
                 if(current == 4){
                 if ( rb[0].isSelected())
               {
                   ans[3] =rb[0].getText();
                }
               else if ( rb[1].isSelected())
               {
                  ans[3] =rb[1].getText();
               }
               else if ( rb[2].isSelected())
               {
                 ans[3]=rb[2].getText();
               }
               else if ( rb[3].isSelected())
               {
                 ans[3] =rb[3].getText();
               }
            }
            
             if(current == 5){
                 if ( rb[0].isSelected())
               {
                  ans[4] =rb[0].getText();
                }
               else if ( rb[1].isSelected())
               {
                 ans[4] =rb[1].getText();
               }
               else if ( rb[2].isSelected())
               {
                ans[4] =rb[2].getText();
               }
               else if ( rb[3].isSelected())
               {
                ans[4] =rb[3].getText();
               }
            }
            
                 if(current == 6){
                 if ( rb[0].isSelected())
               {
                   ans[5] =rb[0].getText();
                }
               else if ( rb[1].isSelected())
               {
                  ans[5] =rb[1].getText();
               }
               else if ( rb[2].isSelected())
               {
                 ans[5]=rb[2].getText();
               }
               else if ( rb[3].isSelected())
               {
                 ans[5]=rb[3].getText();
               }
            }
            
             if(current == 7){
                 if ( rb[0].isSelected())
               {
                  ans[6] =rb[0].getText();
                }
               else if ( rb[1].isSelected())
               {
                 ans[6] =rb[1].getText();
               }
               else if ( rb[2].isSelected())
               {
                ans[6] =rb[2].getText();
               }
               else if ( rb[3].isSelected())
               {
                ans[6] =rb[3].getText();
               }
            }
            
                 if(current == 8){
                 if ( rb[0].isSelected())
               {
                   ans[7]=rb[0].getText();
                }
               else if ( rb[1].isSelected())
               {
                  ans[7]=rb[1].getText();
               }
               else if ( rb[2].isSelected())
               {
                 ans[7] =rb[2].getText();
               }
               else if ( rb[3].isSelected())
               {
                 ans[7] =rb[3].getText();
               }
            }
            
             if(current == 9){
                 
                 if ( rb[0].isSelected())
               {
                  ans[8] =rb[0].getText();
                 
                }
               else if ( rb[1].isSelected())
               {
                 ans[8] =rb[1].getText();
                 
               }
               else if ( rb[2].isSelected())
               {
                ans[8] =rb[2].getText();
               
               }
               else if ( rb[3].isSelected())
               {
                ans[8] =rb[3].getText();
                
               }
               
                button.setEnabled(true);
                   button.setText("Result");
                   
            }
            
                 if(current == 10){
                    
                 if ( rb[0].isSelected())
               {
                   ans[9] =rb[0].getText();
                  
                }
               else if ( rb[1].isSelected())
               {
                  ans[9] =rb[1].getText();
                  
               }
               else if ( rb[2].isSelected())
               {
                 ans[9]=rb[2].getText();
                 
               }
               else if ( rb[3].isSelected())
               {
                 ans[9]=rb[3].getText();
                 }
               
               t.setText(Integer.toString(count));
                    button.setEnabled(false);
                    button3.setEnabled(false); 
                    button2.setEnabled(true);
                    I1.setEnabled(false);
                    I2.setEnabled(false);
            }
               
                set();
                bg.clearSelection();
               
             
            }
    
          }
        });
     
    button2.addActionListener( new ActionListener()
     {  
         public void actionPerformed(ActionEvent e) 
         {  
             if (e.getSource()== button2)
             { 
                 System.out.println("\f");
                 displayAnswers();
                 button2.setEnabled(false);
             }  
            
            }
       });
    
                 
    
    button3.addActionListener( new ActionListener()
     {
         public void actionPerformed(ActionEvent f) 
         {
             if (f.getSource() == button3)
             {
                 if (check())
                 count = count -1;
                 current--;
                
               
                 if(current < 10)
                 {
                 button.setEnabled(true);
                   button.setText("Next");
                 }
                 if ( current <0)
                 {
                   current = 0;  
                  }
                 set();
                 
              }
              
          }
       });
                 
   
    
    menuB = new MenuBar();
    menu= new Menu("File");
    
     I1= new MenuItem("Start Over");
     I1.addActionListener( new ActionListener()
     {
         public void actionPerformed(ActionEvent a) 
         {
            frame.dispose();
            
            Quiz k= new Quiz();
             k.QuizDetails();
            
            }
        });    
     
     
     I2= new MenuItem("Clear Answers");
     I2.addActionListener( new ActionListener()
     {
         public void actionPerformed(ActionEvent b) 
         {  for(int g=0; g<=10; g--)
            {
                count= count - count;
             bg.clearSelection();
            }
            }
        });    
     
     
     I3= new MenuItem(" Exit ");
     I3.addActionListener( new ActionListener()
     {
         public void actionPerformed(ActionEvent c) 
         {
            frame.dispatchEvent(new WindowEvent(frame, WindowEvent.WINDOW_CLOSING));
            }
        });      
    
     menu.add(I1);
     menu.addSeparator();
     menu.add(I2);
     menu.addSeparator();
     menu.add(I3);
     menuB.add(menu);
     
     frame.setMenuBar(menuB);
     
    }
    
    public void set(){
        
        
        if(current==0)  
        {  
            imageLabel.setIcon(new ImageIcon("C:\\Users\\marco\\OneDrive\\"
            + "(DBMS2)(JAVA)(C#)(SAD1)"
            + "\\JAVA\\Assignment\\Assignment2\\TATA.png"));
     
            Q.setText("Name this Auto Logo?");
            Q2.setText("Choose the correct answer");
            rb[0].setText("Tesla");
            rb[1].setText("TATA");
            rb[2].setText("Tuscan");
            rb[3].setText("Lincoln");
           
        }
         
        if(current==1)  
        {  
            imageLabel.setIcon(new ImageIcon("C:\\Users\\marco\\OneDrive\\"
            + "(DBMS2)(JAVA)(C#)(SAD1)"
            + "\\JAVA\\Assignment\\Assignment2\\cat.png"));
            
            Q.setText("Which class is available to all the class automatically?");  
            rb[0].setText("BMW");
            rb[1].setText("Toyota");
            rb[2].setText("Ford");
            rb[3].setText("Mercedez Benz");  
            
       
        }  
        
        if(current==2)  
        {  
             imageLabel.setIcon(new ImageIcon("C:\\Users\\marco\\OneDrive\\"
             + "(DBMS2)(JAVA)(C#)(SAD1)"
            + "\\JAVA\\Assignment\\Assignment2\\dog.png"));
            
            Q.setText("Which package is directly available to our class without importing it?");  
            rb[0].setText("swing");
            rb[1].setText("applet");
            rb[2].setText("net");
            rb[3].setText("lang");  
        }  
        
        if(current==3)  
        {  
             imageLabel.setIcon(new ImageIcon("C:\\Users\\marco\\OneDrive\\"
             + "(DBMS2)(JAVA)(C#)(SAD1)"
            + "\\JAVA\\Assignment\\Assignment2\\barca.png"));
            
            Q.setText("String class is defined in which package?");  
            rb[0].setText("lang");
            rb[1].setText("Swing");
            rb[2].setText("Applet");
            rb[3].setText("awt");  
        }  
        
        if(current==4)  
        {  
             imageLabel.setIcon(new ImageIcon("C:\\Users\\marco\\OneDrive\\"
             + "(DBMS2)(JAVA)(C#)(SAD1)"
            + "\\JAVA\\Assignment\\Assignment2\\plane.png"));
            
            Q.setText("Which institute is best for java coaching?");  
            rb[0].setText("Utek");
            rb[1].setText("Aptech");
            rb[2].setText("SSS IT");
            rb[3].setText("jtek");  
        } 
        
        if(current==5)  
        {  
             imageLabel.setIcon(new ImageIcon("C:\\Users\\marco\\OneDrive\\"
             + "(DBMS2)(JAVA)(C#)(SAD1)"
            + "\\JAVA\\Assignment\\Assignment2\\madrid.png"));
            
            Q.setText("Which one among these is not a keyword?");  
            rb[0].setText("class");
            rb[1].setText("int");
            rb[2].setText("get");
            rb[3].setText("if");  
        } 
        
        if(current==6)  
        {  
             imageLabel.setIcon(new ImageIcon("C:\\Users\\marco\\OneDrive\\"
             + "(DBMS2)(JAVA)(C#)(SAD1)"
            + "\\JAVA\\Assignment\\Assignment2\\cat.png"));
            
            Q.setText("Which one among these is not a class? ");  
            rb[0].setText("Swing");
            rb[1].setText("Actionperformed");
            rb[2].setText("ActionEvent");  
            rb[3].setText("Button");  
        }  
        
        if(current==7)  
        {  
             imageLabel.setIcon(new ImageIcon("C:\\Users\\marco\\OneDrive\\"
             + "(DBMS2)(JAVA)(C#)(SAD1)"
            + "\\JAVA\\Assignment\\Assignment2\\dog.png"));
            
            Q.setText("Which one among these is not a function of Object class?");  
            rb[0].setText("toString");
            rb[1].setText("finalize");
            rb[2].setText("equals");  
            rb[3].setText("getDocumentBase");         
        } 
        
        if(current==8)  
        {  
            imageLabel.setIcon(new ImageIcon("C:\\Users\\marco\\OneDrive\\"
            + "(DBMS2)(JAVA)(C#)(SAD1)"
            + "\\JAVA\\Assignment\\Assignment2\\barca.png"));
            
            Q.setText("What is the name of the vehicle used on the moon by astronauts?");  
            rb[0].setText("Tesla");
            rb[1].setText("Space X Rover");
            rb[2].setText("Lunar Rover");
            rb[3].setText("Moon Rover");  
        } 
        
        if(current==9)  
        {  
             imageLabel.setIcon(new ImageIcon("C:\\Users\\marco\\OneDrive\\"
             + "(DBMS2)(JAVA)(C#)(SAD1)"
            + "\\JAVA\\Assignment\\Assignment2\\plane.png"));
            
            Q.setText("Name this Auto Part");  
            rb[0].setText("Spark Plug");
            rb[1].setText("Glow Plug");
            rb[2].setText("Ignition Plug");  
            rb[3].setText("Spark Engine Plug");  
        } 
        
        
        for(int i=0,j=0;i<=90;i+=30,j++)  
            rb[j].setBounds(250,400+i,200,30);  
            
        }
        
     public boolean check()  
    {  
        if(current==0)  
            return(rb[1].isSelected());  
        if(current==1)  
            return(rb[2].isSelected());  
        if(current==2)  
            return(rb[3].isSelected());  
        if(current==3)  
            return(rb[0].isSelected());  
        if(current==4)  
            return(rb[2].isSelected());  
        if(current==5)  
            return(rb[2].isSelected());  
        if(current==6)  
            return(rb[1].isSelected());  
        if(current==7)  
            return(rb[3].isSelected());  
        if(current==8)  
            return(rb[2].isSelected());  
        if(current==9)  
            return(rb[0].isSelected());  
        return false;  
    }  
    
     
    public void displayAnswers()
    {
  
            System.out.println(" Question 1: Which one among these is not a primitive datatype?");
            System.out.println(" Answer: float");
            System.out.println("Your choice:" + ans[0]);
            System.out.println();
            
            System.out.println("Question 2: Which class is available to all" + 
            "the class automatically?");  
             System.out.println(" Answer: Object");
            System.out.println("Your choice:" +  ans[1]);
            System.out.println();
            
            System.out.println("Question 3: Which package is directly available to our" + 
            "class without importing it?");  
             System.out.println(" Answer: lang"); 
             System.out.println("Your choice:" +  ans[2]);
             System.out.println();
            
            System.out.println("Question 4: String class is defined in which package?");  
             System.out.println(" Answer:  lang");
             System.out.println("Your choice:" +  ans[3]);
             System.out.println();
            
            System.out.println("Question 5: Which institute is best for java coaching?");  
            System.out.println("Answer: SSS IT");
            System.out.println("Your choice:" +  ans[4]);
            System.out.println();
             
            System.out.println("Question 6: Which one among these is not a keyword?");  
            System.out.println("Answer: get");
            System.out.println("Your choice:" +  ans[5]);
            System.out.println();
                 
            System.out.println("Qustion 7: Which one among these is not a class? ");  
            System.out.println("Answer: Actionperformed");
            System.out.println("Your choice:" +  ans[6]);
            System.out.println();
              
            System.out.println("Question 8: Which one among these is not"
            + "a function of Object class?");  
            System.out.println("Answer: getDocumentBase");  
            System.out.println("Your choice:" +  ans[7]);
            System.out.println();
            
            System.out.println("Question 9: What is the name vehicle used on the moon by astronauts?"
            + "in Applet class?");  
            System.out.println("Answer: Lunar Rover");
            System.out.println("Your choice:" +  ans[8]);
            System.out.println(); 
            
            System.out.println("Question 10: Name this Auto Part: "
            +"a valid component?"); 
            System.out.println("Answer: Spark Plug");  
            System.out.println("Your choice:" +  ans[9]);
            System.out.println();
             

     }  
    
    
     
     
  }

    

/**
 * class to display quiz
 *
 * @author (your name)
 * @version (a version number or a date)
 */
public class displayQuiz

{  public static void main(String args[])
  {
      Quiz m =new Quiz();
      m.QuizDetails();
     
     
     
     
  }
  
}

  
  
  
  


